{"ast":null,"code":"var _jsxFileName = \"/Users/annacho/Downloads/hooks-01-starting-project/src/components/Todo.js\";\nimport React, { useState } from 'react';\n\nvar todo = function todo(props) {\n  var inputState = useState('');\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputState[1],\n    value: inputState[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Add\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }));\n};\n\nexport default todo;","map":{"version":3,"sources":["/Users/annacho/Downloads/hooks-01-starting-project/src/components/Todo.js"],"names":["React","useState","todo","props","inputState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AACpB,MAAMC,UAAU,GAAGH,QAAQ,CAAC,EAAD,CAA3B;AAEA,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,MAA/B;AAAsC,IAAA,QAAQ,EAAEG,UAAU,CAAC,CAAD,CAA1D;AAA+D,IAAA,KAAK,EAAEA,UAAU,CAAC,CAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAVD;;AAYA,eAAeF,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst todo = props => {\n  const inputState = useState('');\n\n  return (\n    <React.Fragment>\n      <input type=\"text\" placeholder=\"Todo\" onChange={inputState[1]} value={inputState[0]}/>\n      <button type=\"button\">Add</button>\n      <ul />\n    </React.Fragment>\n  );\n};\n\nexport default todo;\n"]},"metadata":{},"sourceType":"module"}